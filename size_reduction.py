'''
サイズ基底簡約アルゴリズムの実装
'''
def Gram_Schmidt(n, B):
    GS = Matrix(RR, n)
    U = Matrix(RR, n)

    for i in range(n):
        GS[i] = B[i]
        U[i, i] = 1.0
        for j in range(i):
            U[i, j] = B[i].inner_product(GS[j])/(GS[j].norm()**2)
            GS[i] = GS[i] - ( U[i, j] * GS[j] )
    return GS, U

def Size_reduce(n, B):
    GS, U = Gram_Schmidt(n, B)

    for i in range(1, n):
        for j in range(i)[::-1]:
            if abs(U[i, j]) > 0.50:
                q = round(U[i, j])
                B[i] -= q * B[j]
                for l in range(j + 1):
                    U[i, l] -= q * U[j, l]

    return True





n = 6
B = Matrix(ZZ, 6)
for i in range(n):
    for j in range(n):
        B[i, j] = randint(-100, 100)


show(B)
GS, U = Gram_Schmidt(n, B)
print(U)

Size_reduce(n, B)
print(B)

GS, U = Gram_Schmidt(n, B)
print(U)

'''
output
[ 26 -76 -75  83  27 -63]
[-18 -81  91  94 -38 -86]
[ -7 -14   8 -48  90 -13]
[-41 -26 -94  26  16 -86]
[-69 -17  17  93  80  55]
[  6 -81  -8   8  56 -10]
[   1.00000000000000   0.000000000000000   0.000000000000000   0.000000000000000   0.000000000000000   0.000000000000000]
[  0.467249830966870    1.00000000000000   0.000000000000000   0.000000000000000   0.000000000000000   0.000000000000000]
[-0.0191430020283976  -0.166729274965665    1.00000000000000   0.000000000000000   0.000000000000000   0.000000000000000]
[  0.674780256930358  -0.142329078713883  0.0849092144475328    1.00000000000000   0.000000000000000   0.000000000000000]
[  0.195951656524679   0.107363906646942   0.342654881770699  -0.290783357154316    1.00000000000000   0.000000000000000]
[  0.410665990534145  0.0241463850136017   0.604855630644457  -0.296490966023558  0.0360087897087295    1.00000000000000]
[ 26 -76 -75  83  27 -63]
[-18 -81  91  94 -38 -86]
[ -7 -14   8 -48  90 -13]
[-67  50 -19 -57 -11 -23]
[-69 -17  17  93  80  55]
[ 13 -67 -16  56 -34   3]
[   1.00000000000000   0.000000000000000   0.000000000000000   0.000000000000000   0.000000000000000   0.000000000000000]
[  0.467249830966870    1.00000000000000   0.000000000000000   0.000000000000000   0.000000000000000   0.000000000000000]
[-0.0191430020283976  -0.166729274965665    1.00000000000000   0.000000000000000   0.000000000000000   0.000000000000000]
[ -0.325219743069642  -0.142329078713883  0.0849092144475327    1.00000000000000   0.000000000000000   0.000000000000000]
[  0.195951656524679   0.107363906646942   0.342654881770699  -0.290783357154316    1.00000000000000   0.000000000000000]
[  0.429808992562542   0.190875659979266  -0.395144369355543  -0.296490966023558  0.0360087897087294    1.00000000000000]
sage: 


'''